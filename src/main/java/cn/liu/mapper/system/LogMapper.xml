<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.liu.mapper.system.LogMapper">
  <resultMap id="BaseResultMap" type="cn.liu.po.system.Log">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="args" jdbcType="VARCHAR" property="args" />
    <result column="user_id" jdbcType="CHAR" property="userId" />
    <result column="operation_describe" jdbcType="VARCHAR" property="operation_describe" />
    <result column="operation_type" jdbcType="VARCHAR" property="operationType" />
    <result column="run_time" jdbcType="INTEGER" property="runTime" />
    <result column="return_value" jdbcType="VARCHAR" property="returnValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, method, args, user_id, operation_describe, operation_type, run_time, return_value
  </sql>
  <select id="selectByExample" parameterType="cn.liu.po.system.LogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.liu.po.system.LogExample">
    delete from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.liu.po.system.Log">
    insert into sys_log (id, method, args, 
      user_id, operation_describe, operation_type, 
      run_time, return_value)
    values (#{id,jdbcType=INTEGER}, #{method,jdbcType=VARCHAR}, #{args,jdbcType=VARCHAR}, 
      #{userId,jdbcType=CHAR}, #{operationDescribe,jdbcType=VARCHAR}, #{operationType,jdbcType=VARCHAR}, 
      #{runTime,jdbcType=INTEGER}, #{returnValue,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.liu.po.system.Log">
    insert into sys_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="method != null">
        method,
      </if>
      <if test="args != null">
        args,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="operation_describe != null">
        operation_describe,
      </if>
      <if test="operationType != null">
        operation_type,
      </if>
      <if test="runTime != null">
        run_time,
      </if>
      <if test="returnValue != null">
        return_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="args != null">
        #{args,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=CHAR},
      </if>
      <if test="operation_describe != null">
        #{operation_describe,jdbcType=VARCHAR},
      </if>
      <if test="operationType != null">
        #{operationType,jdbcType=VARCHAR},
      </if>
      <if test="runTime != null">
        #{runTime,jdbcType=INTEGER},
      </if>
      <if test="returnValue != null">
        #{returnValue,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.liu.po.system.LogExample" resultType="java.lang.Long">
    select count(*) from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.method != null">
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.args != null">
        args = #{record.args,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=CHAR},
      </if>
      <if test="record.operation_describe != null">
        operation_describe = #{record.operation_describe,jdbcType=VARCHAR},
      </if>
      <if test="record.operationType != null">
        operation_type = #{record.operationType,jdbcType=VARCHAR},
      </if>
      <if test="record.runTime != null">
        run_time = #{record.runTime,jdbcType=INTEGER},
      </if>
      <if test="record.returnValue != null">
        return_value = #{record.returnValue,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_log
    set id = #{record.id,jdbcType=INTEGER},
      method = #{record.method,jdbcType=VARCHAR},
      args = #{record.args,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=CHAR},
      operation_describe = #{record.operation_describe,jdbcType=VARCHAR},
      operation_type = #{record.operationType,jdbcType=VARCHAR},
      run_time = #{record.runTime,jdbcType=INTEGER},
      return_value = #{record.returnValue,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.liu.po.system.Log">
    update sys_log
    <set>
      <if test="method != null">
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="args != null">
        args = #{args,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="operation_describe != null">
        operation_describe = #{operation_describe,jdbcType=VARCHAR},
      </if>
      <if test="operationType != null">
        operation_type = #{operationType,jdbcType=VARCHAR},
      </if>
      <if test="runTime != null">
        run_time = #{runTime,jdbcType=INTEGER},
      </if>
      <if test="returnValue != null">
        return_value = #{returnValue,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.liu.po.system.Log">
    update sys_log
    set method = #{method,jdbcType=VARCHAR},
      args = #{args,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=CHAR},
      operation_describe = #{operation_describe,jdbcType=VARCHAR},
      operation_type = #{operationType,jdbcType=VARCHAR},
      run_time = #{runTime,jdbcType=INTEGER},
      return_value = #{returnValue,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>