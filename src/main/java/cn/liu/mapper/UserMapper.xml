<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.liu.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="cn.liu.po.User">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_real_name" jdbcType="VARCHAR" property="userRealName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="pwd_salt" jdbcType="VARCHAR" property="pwdSalt" />
    <result column="user_type" jdbcType="VARCHAR" property="userType" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="lastest_login_ip" jdbcType="TIMESTAMP" property="lastestLoginIp" />
    <result column="lastest_login_time" jdbcType="TIMESTAMP" property="lastestLoginTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_name, user_real_name, user_password, pwd_salt, user_type, create_date, lastest_login_ip, 
    lastest_login_time
  </sql>
  <select id="selectByExample" parameterType="cn.liu.po.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_user
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.liu.po.UserExample">
    delete from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.liu.po.User">
    insert into sys_user (id, user_name, user_real_name, 
      user_password, pwd_salt, user_type, 
      create_date, lastest_login_ip, lastest_login_time
      )
    values (#{id,jdbcType=CHAR}, #{userName,jdbcType=VARCHAR}, #{userRealName,jdbcType=VARCHAR}, 
      #{userPassword,jdbcType=VARCHAR}, #{pwdSalt,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{lastestLoginIp,jdbcType=TIMESTAMP}, #{lastestLoginTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.liu.po.User">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userRealName != null">
        user_real_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="pwdSalt != null">
        pwd_salt,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="lastestLoginIp != null">
        lastest_login_ip,
      </if>
      <if test="lastestLoginTime != null">
        lastest_login_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userRealName != null">
        #{userRealName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="pwdSalt != null">
        #{pwdSalt,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastestLoginIp != null">
        #{lastestLoginIp,jdbcType=TIMESTAMP},
      </if>
      <if test="lastestLoginTime != null">
        #{lastestLoginTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.liu.po.UserExample" resultType="java.lang.Long">
    select count(*) from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userRealName != null">
        user_real_name = #{record.userRealName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null">
        user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.pwdSalt != null">
        pwd_salt = #{record.pwdSalt,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastestLoginIp != null">
        lastest_login_ip = #{record.lastestLoginIp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastestLoginTime != null">
        lastest_login_time = #{record.lastestLoginTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_user
    set id = #{record.id,jdbcType=CHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_real_name = #{record.userRealName,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      pwd_salt = #{record.pwdSalt,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      lastest_login_ip = #{record.lastestLoginIp,jdbcType=TIMESTAMP},
      lastest_login_time = #{record.lastestLoginTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.liu.po.User">
    update sys_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userRealName != null">
        user_real_name = #{userRealName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="pwdSalt != null">
        pwd_salt = #{pwdSalt,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastestLoginIp != null">
        lastest_login_ip = #{lastestLoginIp,jdbcType=TIMESTAMP},
      </if>
      <if test="lastestLoginTime != null">
        lastest_login_time = #{lastestLoginTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.liu.po.User">
    update sys_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_real_name = #{userRealName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      pwd_salt = #{pwdSalt,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      lastest_login_ip = #{lastestLoginIp,jdbcType=TIMESTAMP},
      lastest_login_time = #{lastestLoginTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>